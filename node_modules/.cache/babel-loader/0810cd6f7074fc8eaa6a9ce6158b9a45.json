{"ast":null,"code":"var _jsxFileName = \"/Users/jyotjoshi/Downloads/react-memory-game-main/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fruits, setFruits] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [fruitOne, setFruitOne] = useState(null);\n  const [fruitTwo, setFruitTwo] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const chooseCard = fruit => {\n    fruitOne ? setFruitTwo(fruit) : setFruitOne(fruit);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  const initGame = () => {\n    const allFruits = [...fruitItems, ...fruitItems].sort(() => Math.random() - 0.5).map(item => ({\n      ...item,\n      id: Math.random()\n    }));\n    setFruits(allFruits);\n    setGameOver(false); // Reset game over state\n  };\n\n  const resetGame = () => {\n    setFruits(prevFruits => {\n      return prevFruits.map(item => {\n        if (item.matched) {\n          return {\n            ...item,\n            matched: false\n          };\n        }\n        return item;\n      });\n    });\n    setFruitOne(null);\n    setFruitTwo(null);\n    setTurns(0);\n    setTimeout(() => {\n      initGame();\n    }, 500);\n  };\n  useEffect(() => {\n    if (fruits.every(fruit => fruit.matched)) {\n      setGameOver(true);\n    }\n    if (fruitOne && fruitTwo) {\n      if (fruitOne.src === fruitTwo.src) {\n        setFruits(prevFruits => {\n          return prevFruits.map(item => {\n            if (item.src === fruitOne.src) {\n              return {\n                ...item,\n                matched: true\n              };\n            } else {\n              return item;\n            }\n          });\n        });\n      }\n      setTimeout(() => {\n        setFruitOne(null);\n        setFruitTwo(null);\n      }, 500);\n    }\n  }, [fruitTwo, fruitOne, fruits]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Train Your Brain!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Turns: \", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Congratulations! You have matched all the cards!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: fruits.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset\",\n          onClick: resetGame,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"40\",\n            height: \"40\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: \"1\",\n            stroke: \"currentColor\",\n            fill: \"none\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              stroke: \"none\",\n              d: \"M0 0h24v24H0z\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1.002 7.935 1.007 9.425 4.747\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M20 4v5h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-block\",\n          children: fruits.map((fruit, key) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              chooseCard: chooseCard,\n              flipped: fruit === fruitOne || fruit === fruitTwo || fruit.matched,\n              fruit: fruit\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-game\",\n        onClick: initGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(App, \"kmqK1TR/HG1Q5Q4FNknmqRuSD60=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","fruits","setFruits","useState","turns","setTurns","fruitOne","setFruitOne","fruitTwo","setFruitTwo","gameOver","setGameOver","chooseCard","fruit","prevTurns","initGame","allFruits","fruitItems","sort","Math","random","map","item","id","resetGame","prevFruits","matched","setTimeout","useEffect","every","src","length","key"],"sources":["/Users/jyotjoshi/Downloads/react-memory-game-main/src/App.js"],"sourcesContent":["function App() {\n  const [fruits, setFruits] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [fruitOne, setFruitOne] = useState(null);\n  const [fruitTwo, setFruitTwo] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const chooseCard = (fruit) => {\n    fruitOne ? setFruitTwo(fruit) : setFruitOne(fruit);\n    setTurns((prevTurns) => prevTurns + 1);\n  };\n\n  const initGame = () => {\n    const allFruits = [...fruitItems, ...fruitItems]\n      .sort(() => Math.random() - 0.5)\n      .map((item) => ({ ...item, id: Math.random() }));\n    setFruits(allFruits);\n    setGameOver(false); // Reset game over state\n  };\n\n  const resetGame = () => {\n    setFruits((prevFruits) => {\n      return prevFruits.map((item) => {\n        if (item.matched) {\n          return { ...item, matched: false };\n        }\n        return item;\n      });\n    });\n\n    setFruitOne(null);\n    setFruitTwo(null);\n    setTurns(0);\n\n    setTimeout(() => {\n      initGame();\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (fruits.every((fruit) => fruit.matched)) {\n      setGameOver(true);\n    }\n\n    if (fruitOne && fruitTwo) {\n      if (fruitOne.src === fruitTwo.src) {\n        setFruits((prevFruits) => {\n          return prevFruits.map((item) => {\n            if (item.src === fruitOne.src) {\n              return { ...item, matched: true };\n            } else {\n              return item;\n            }\n          });\n        });\n      }\n\n      setTimeout(() => {\n        setFruitOne(null);\n        setFruitTwo(null);\n      }, 500);\n    }\n  }, [fruitTwo, fruitOne, fruits]);\n\n  return (\n    <>\n      <h1>Train Your Brain!!!</h1>\n      <h3>Turns: {turns}</h3>\n      {gameOver ? (\n        <h2>Congratulations! You have matched all the cards!</h2>\n      ) : (\n        <>\n          {fruits.length ? (\n            <>\n              <button className=\"reset\" onClick={resetGame}>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth=\"1\"\n                  stroke=\"currentColor\"\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                  <path d=\"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1.002 7.935 1.007 9.425 4.747\"></path>\n                  <path d=\"M20 4v5h-5\"></path>\n                </svg>\n              </button>\n              <div className=\"game-block\">\n                {fruits.map((fruit, key) => {\n                  return (\n                    <Card\n                      key={key}\n                      chooseCard={chooseCard}\n                      flipped={\n                        fruit === fruitOne || fruit === fruitTwo || fruit.matched\n                      }\n                      fruit={fruit}\n                    />\n                  );\n                })}\n              </div>\n            </>\n          ) : (\n            <button className=\"start-game\" onClick={initGame}>\n              Start Game\n            </button>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}