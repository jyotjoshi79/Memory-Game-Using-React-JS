{"ast":null,"code":"var _jsxFileName = \"/Users/jyotjoshi/Downloads/react-memory-game-main/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport fruitItems from './fruits.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  let {\n    fruit,\n    flipped,\n    chooseCard\n  } = _ref;\n  const cardClickHandle = () => {\n    chooseCard(fruit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flipped ? 'matched' : ''}`,\n    onClick: cardClickHandle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        transform: \"rotateY(180deg)\"\n      },\n      src: fruit.src,\n      alt: fruit.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"40\",\n      height: \"40\",\n      viewBox: \"0 0 24 24\",\n      strokeWidth: \"1.5\",\n      stroke: \"currentColor\",\n      fill: \"none\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        stroke: \"none\",\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M8 8a3.5 3 0 0 1 3.5 -3h1a3.5 3 0 0 1 3.5 3a3 3 0 0 1 -2 3a3 4 0 0 0 -2 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"12\",\n        y1: \"19\",\n        x2: \"12\",\n        y2: \"19.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Card;\nfunction App() {\n  _s();\n  const [fruits, setFruits] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [fruitOne, setFruitOne] = useState(null);\n  const [fruitTwo, setFruitTwo] = useState(null);\n  const [alertShown, setAlertShown] = useState(false); // New state variable\n\n  const chooseCard = fruit => {\n    fruitOne ? setFruitTwo(fruit) : setFruitOne(fruit);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  const initGame = () => {\n    const allFruits = [...fruitItems, ...fruitItems].sort(() => Math.random() - .5).map(item => ({\n      ...item,\n      id: Math.random()\n    }));\n    setFruits(allFruits);\n  };\n  const resetGame = () => {\n    setFruits(prevFruits => {\n      return prevFruits.map(item => {\n        if (item.matched) {\n          return {\n            ...item,\n            matched: false\n          };\n        }\n        return item;\n      });\n    });\n    setFruitOne(null);\n    setFruitTwo(null);\n    setTurns(0);\n    // Reset alertShown to false\n    setAlertShown(false);\n    setTimeout(() => {\n      initGame();\n    }, 500);\n  };\n  useEffect(() => {\n    if (fruits.every(fruit => fruit.matched)) {\n      // Check if alert has already been shown\n      if (!alertShown) {\n        alert('Congratulations! You have matched all the cards! You can now reset your game by clicking on the reset button.');\n        setAlertShown(true); // Set alertShown to true to prevent showing the alert again\n      }\n\n      resetGame();\n    }\n    if (fruitOne && fruitTwo) {\n      if (fruitOne.src === fruitTwo.src) {\n        setFruits(prevFruits => {\n          return prevFruits.map(item => {\n            if (item.src === fruitOne.src) {\n              return {\n                ...item,\n                matched: true\n              };\n            } else {\n              return item;\n            }\n          });\n        });\n      }\n      setTimeout(() => {\n        setFruitOne(null);\n        setFruitTwo(null);\n      }, 500);\n    }\n  }, [fruitTwo, fruitOne, fruits, alertShown]); // Add alertShown to dependencies array\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Train Your Brain!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Turns: \", turns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), fruits.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: resetGame,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"40\",\n          height: \"40\",\n          viewBox: \"0 0 24 24\",\n          strokeWidth: \"1\",\n          stroke: \"currentColor\",\n          fill: \"none\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            stroke: \"none\",\n            d: \"M0 0h24v24H0z\",\n            fill: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1.002 7.935 1.007 9.425 4.747\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M20 4v5h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-block\",\n        children: fruits.map((fruit, key) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            chooseCard: chooseCard,\n            flipped: fruit === fruitOne || fruit === fruitTwo || fruit.matched,\n            fruit: fruit\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-game\",\n      onClick: initGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gnO1R6umrus/+QxHPp7wb3IGE8k=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fruitItems","Card","fruit","flipped","chooseCard","cardClickHandle","transform","src","name","App","fruits","setFruits","turns","setTurns","fruitOne","setFruitOne","fruitTwo","setFruitTwo","alertShown","setAlertShown","prevTurns","initGame","allFruits","sort","Math","random","map","item","id","resetGame","prevFruits","matched","setTimeout","every","alert","length","key"],"sources":["/Users/jyotjoshi/Downloads/react-memory-game-main/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fruitItems from './fruits.json';\nimport './App.css';\n\nfunction Card({ fruit, flipped, chooseCard }) {\n  const cardClickHandle = () => {\n    chooseCard(fruit);\n  }\n\n  return (\n    <div className={`card ${flipped ? 'matched' : ''}`} onClick={cardClickHandle}>\n      <img style={{ transform: \"rotateY(180deg)\" }} src={fruit.src} alt={fruit.name} />\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n        <path d=\"M8 8a3.5 3 0 0 1 3.5 -3h1a3.5 3 0 0 1 3.5 3a3 3 0 0 1 -2 3a3 4 0 0 0 -2 4\"></path>\n        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"19.01\"></line>\n      </svg>\n    </div>\n  );\n}\n\nfunction App() {\n  const [fruits, setFruits] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [fruitOne, setFruitOne] = useState(null);\n  const [fruitTwo, setFruitTwo] = useState(null);\n  const [alertShown, setAlertShown] = useState(false); // New state variable\n\n  const chooseCard = (fruit) => {\n    fruitOne ? setFruitTwo(fruit) : setFruitOne(fruit);\n    setTurns((prevTurns) => prevTurns + 1);\n  };\n\n  const initGame = () => {\n    const allFruits = [...fruitItems, ...fruitItems]\n      .sort(() => Math.random() - .5)\n      .map((item) => ({ ...item, id: Math.random() }))\n    setFruits(allFruits);\n  };\n\n  const resetGame = () => {\n    setFruits(prevFruits => {\n      return prevFruits.map(item => {\n        if (item.matched) {\n          return { ...item, matched: false }\n        }\n        return item\n      })\n    })\n    setFruitOne(null)\n    setFruitTwo(null)\n    setTurns(0);\n    // Reset alertShown to false\n    setAlertShown(false);\n    setTimeout(() => {\n      initGame()\n    }, 500)\n  }\n\n  useEffect(() => {\n    if (fruits.every((fruit) => fruit.matched)) {\n      // Check if alert has already been shown\n      if (!alertShown) {\n        alert('Congratulations! You have matched all the cards! You can now reset your game by clicking on the reset button.');\n        setAlertShown(true); // Set alertShown to true to prevent showing the alert again\n      }\n      resetGame();\n    }\n    if (fruitOne && fruitTwo) {\n      if (fruitOne.src === fruitTwo.src) {\n        setFruits(prevFruits => {\n          return prevFruits.map(item => {\n            if (item.src === fruitOne.src) {\n              return { ...item, matched: true }\n            } else {\n              return item\n            }\n          })\n        })\n      }\n      setTimeout(() => {\n        setFruitOne(null)\n        setFruitTwo(null)\n      }, 500)\n    }\n  }, [fruitTwo, fruitOne, fruits, alertShown]) // Add alertShown to dependencies array\n\n  return (\n    <>\n      <h1>Train Your Brain!!!</h1>\n      <h3>Turns: {turns}</h3>\n      {\n        fruits.length ? <>\n          <button className='reset' onClick={resetGame}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" strokeWidth=\"1\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n              <path d=\"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1.002 7.935 1.007 9.425 4.747\"></path>\n              <path d=\"M20 4v5h-5\"></path>\n            </svg>\n          </button >\n          <div className=\"game-block\">\n            {\n              fruits.map((fruit, key) => {\n                return <Card\n                  key={key}\n                  chooseCard={chooseCard}\n                  flipped={fruit === fruitOne || fruit === fruitTwo || fruit.matched}\n                  fruit={fruit}\n                />\n              })\n            }\n          </div>\n        </> : <button className='start-game' onClick={initGame}>\n          Start Game\n        </button>\n      }\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}