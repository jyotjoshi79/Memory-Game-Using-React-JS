{"ast":null,"code":"var _jsxFileName = \"/Users/jyotjoshi/Downloads/react-memory-game-main/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport fruitItems from './fruits.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    // For simplicity, let's assume any username/password is valid\n    if (username === 'admin' && password === '1234') {\n      onLogin(username);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nfunction Card(_ref2) {\n  let {\n    fruit,\n    flipped,\n    chooseCard\n  } = _ref2;\n  const cardClickHandle = () => {\n    chooseCard(fruit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flipped ? 'matched' : ''}`,\n    onClick: cardClickHandle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        transform: \"rotateY(180deg)\"\n      },\n      src: fruit.src,\n      alt: fruit.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"40\",\n      height: \"40\",\n      viewBox: \"0 0 24 24\",\n      strokeWidth: \"1.5\",\n      stroke: \"currentColor\",\n      fill: \"none\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        stroke: \"none\",\n        d: \"M0 0h24v24H0z\",\n        fill: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: \"M8 8a3.5 3 0 0 1 3.5 -3h1a3.5 3 0 0 1 3.5 3a3 3 0 0 1 -2 3a3 4 0 0 0 -2 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"12\",\n        y1: \"19\",\n        x2: \"12\",\n        y2: \"19.01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Card;\nfunction App() {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [fruits, setFruits] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [fruitOne, setFruitOne] = useState(null);\n  const [fruitTwo, setFruitTwo] = useState(null);\n  const [gameOver, setGameOver] = useState(false); // New state for tracking game over\n\n  const chooseCard = fruit => {\n    fruitOne ? setFruitTwo(fruit) : setFruitOne(fruit);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  const initGame = () => {\n    const allFruits = [...fruitItems, ...fruitItems].sort(() => Math.random() - .5).map(item => ({\n      ...item,\n      id: Math.random()\n    }));\n    setFruits(allFruits);\n    setGameOver(false); // Reset game over status when starting a new game\n  };\n\n  const resetGame = () => {\n    setFruits(prevFruits => {\n      return prevFruits.map(item => {\n        if (item.matched) {\n          return {\n            ...item,\n            matched: false\n          };\n        }\n        return item;\n      });\n    });\n    setFruitOne(null);\n    setFruitTwo(null);\n    setTurns(0);\n    setTimeout(() => {\n      initGame();\n    }, 500);\n  };\n  useEffect(() => {\n    // Check if all fruits are matched to end the game\n    // if (fruits.every((fruit) => fruit.matched) && !gameOver) {\n    //   setGameOver(true); // Set game over status to true\n    //   alert('Congratulations! You have matched all the cards! You can now reset your game by clicking on the reset button.');\n    // }\n\n    // Check if two fruits are chosen\n    if (fruitOne && fruitTwo) {\n      if (fruitOne.src === fruitTwo.src) {\n        setFruits(prevFruits => {\n          return prevFruits.map(item => {\n            if (item.src === fruitOne.src) {\n              return {\n                ...item,\n                matched: true\n              };\n            } else {\n              return item;\n            }\n          });\n        });\n      }\n      setTimeout(() => {\n        setFruitOne(null);\n        setFruitTwo(null);\n      }, 500);\n    }\n  }, [fruitTwo, fruitOne, fruits, gameOver]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Turns: \", turns]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), fruits.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset\",\n          onClick: resetGame,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"40\",\n            height: \"40\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: \"1\",\n            stroke: \"currentColor\",\n            fill: \"none\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              stroke: \"none\",\n              d: \"M0 0h24v24H0z\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1.002 7.935 1.007 9.425 4.747\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M20 4v5h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-block\",\n          children: fruits.map((fruit, key) => /*#__PURE__*/_jsxDEV(Card, {\n            chooseCard: chooseCard,\n            flipped: fruit === fruitOne || fruit === fruitTwo || fruit.matched,\n            fruit: fruit\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-game\",\n        onClick: initGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s2(App, \"xx5KGw2TcapHtXVgfNFon2yBMPI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fruitItems","Login","onLogin","username","setUsername","password","setPassword","handleLogin","e","target","value","Card","fruit","flipped","chooseCard","cardClickHandle","transform","src","name","App","isLoggedIn","setIsLoggedIn","fruits","setFruits","turns","setTurns","fruitOne","setFruitOne","fruitTwo","setFruitTwo","gameOver","setGameOver","prevTurns","initGame","allFruits","sort","Math","random","map","item","id","resetGame","prevFruits","matched","setTimeout","length","key"],"sources":["/Users/jyotjoshi/Downloads/react-memory-game-main/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport fruitItems from './fruits.json';\nimport './App.css';\n\nfunction Login({ onLogin }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // For simplicity, let's assume any username/password is valid\n    if (username === 'admin' && password === '1234') {\n      onLogin(username);\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n}\n\nfunction Card({ fruit, flipped, chooseCard }) {\n  const cardClickHandle = () => {\n    chooseCard(fruit);\n  };\n\n  return (\n    <div className={`card ${flipped ? 'matched' : ''}`} onClick={cardClickHandle}>\n      <img style={{ transform: \"rotateY(180deg)\" }} src={fruit.src} alt={fruit.name} />\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n        <path d=\"M8 8a3.5 3 0 0 1 3.5 -3h1a3.5 3 0 0 1 3.5 3a3 3 0 0 1 -2 3a3 4 0 0 0 -2 4\"></path>\n        <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"19.01\"></line>\n      </svg>\n    </div>\n  );\n}\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [fruits, setFruits] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [fruitOne, setFruitOne] = useState(null);\n  const [fruitTwo, setFruitTwo] = useState(null);\n  const [gameOver, setGameOver] = useState(false); // New state for tracking game over\n\n  const chooseCard = (fruit) => {\n    fruitOne ? setFruitTwo(fruit) : setFruitOne(fruit);\n    setTurns((prevTurns) => prevTurns + 1);\n  };\n\n  const initGame = () => {\n    const allFruits = [...fruitItems, ...fruitItems]\n      .sort(() => Math.random() - .5)\n      .map((item) => ({ ...item, id: Math.random() }))\n    setFruits(allFruits);\n    setGameOver(false); // Reset game over status when starting a new game\n  };\n\n  const resetGame = () => {\n    setFruits(prevFruits => {\n      return prevFruits.map(item => {\n        if (item.matched) {\n          return { ...item, matched: false }\n        }\n\n        return item\n      })\n    })\n\n    setFruitOne(null)\n    setFruitTwo(null)\n    setTurns(0);\n\n    setTimeout(() => {\n      initGame()\n    }, 500)\n  }\n\n  useEffect(() => {\n    // Check if all fruits are matched to end the game\n    // if (fruits.every((fruit) => fruit.matched) && !gameOver) {\n    //   setGameOver(true); // Set game over status to true\n    //   alert('Congratulations! You have matched all the cards! You can now reset your game by clicking on the reset button.');\n    // }\n\n    // Check if two fruits are chosen\n    if (fruitOne && fruitTwo) {\n      if (fruitOne.src === fruitTwo.src) {\n        setFruits(prevFruits => {\n          return prevFruits.map(item => {\n            if (item.src === fruitOne.src) {\n              return { ...item, matched: true }\n            } else {\n              return item\n            }\n          })\n        })\n      }\n\n      setTimeout(() => {\n        setFruitOne(null)\n        setFruitTwo(null)\n      }, 500)\n    }\n  }, [fruitTwo, fruitOne, fruits, gameOver])\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <>\n          <h1>Welcome, {username}!</h1>\n          <h3>Turns: {turns}</h3>\n          {fruits.length ? (\n            <>\n              <button className='reset' onClick={resetGame}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 24 24\" strokeWidth=\"1\" stroke=\"currentColor\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                  <path d=\"M19.933 13.041a8 8 0 1 1 -9.925 -8.788c3.899 -1.002 7.935 1.007 9.425 4.747\"></path>\n                  <path d=\"M20 4v5h-5\"></path>\n                </svg>\n              </button >\n              <div className=\"game-block\">\n                {fruits.map((fruit, key) => (\n                  <Card\n                    key={key}\n                    chooseCard={chooseCard}\n                    flipped={fruit === fruitOne || fruit === fruitTwo || fruit.matched}\n                    fruit={fruit}\n                  />\n                ))}\n              </div>\n            </>\n          ) : (\n            <button className='start-game' onClick={initGame}>\n              Start Game\n            </button>\n          )}\n        </>\n      ) : (\n        <Login onLogin={setIsLoggedIn} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}